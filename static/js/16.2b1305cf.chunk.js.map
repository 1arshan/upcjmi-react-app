{"version":3,"sources":["screens/403.screen.tsx","screens/student/accountNotVerified.screen.tsx","screens/student/home.student.screen.tsx"],"names":["connect","state","isAuthenticated","auth","dispatch","className","status","title","subTitle","extra","Message","user","account","email_verified","email","AccountNotVerifiedScreen","Title","props","type","account_verified"],"mappings":"4JAwCeA,iBAPS,SAACC,GAAD,MAAsC,CAC5DC,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAkD,KAE9DJ,EAxByB,SAAC,GAAD,IAAEE,EAAF,EAAEA,gBAAF,OACtC,yBAAKG,UAAU,uBACb,uBACEC,OAAO,MACPC,MAAM,MACNC,SACEN,EACI,2DACA,2CAENO,MACGP,EAA+B,yDAAb,kBAAC,IAAD,a,uHClBrBQ,EAAsB,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAC1B,6BACGA,EAAKC,QAAQC,eACZ,mIAIA,mEAEG,IACAF,EAAKG,MAHR,uCAKE,6BALF,qGAUF,6BAhBF,wCAkBE,6BACA,6BAnBF,yCAqBE,6BACA,kBAAC,IAAD,QAeWC,EAX8B,SAAC,GAAD,IAAEJ,EAAF,EAAEA,KAAF,OAC3C,yBAAKN,UAAU,iCACb,uBACEC,OAAO,UACPC,MAAM,kCACNE,MAAO,kBAAC,EAAD,CAASE,KAAMA,QCtBrBK,E,IAAAA,MAwBQhB,uBARS,SAACC,GAAD,MAAsC,CAC5DU,KAAMV,EAAME,KAAKQ,KACjBT,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAkD,KAE9DJ,EAtBuB,SAACiB,GAAmB,IACjDN,EAAyBM,EAAzBN,KAEP,OAFgCM,EAAnBf,gBAGTS,GAAsB,MAAdA,EAAKO,KAAqB,kBAAC,IAAD,MACnCP,IAASA,EAAKC,QAAQO,iBAAyB,kBAAC,EAAD,CAA0BR,KAAMA,IAGhF,yBAAKN,UAAU,aACb,kBAACW,EAAD,wBANyB,kBAAC,IAAD","file":"static/js/16.2b1305cf.chunk.js","sourcesContent":["import React, {FC} from 'react';\nimport {Result} from 'antd';\nimport {connect} from 'react-redux';\n\nimport SignIn from '../components/userAccountButton';\nimport {IReduxState} from '../reducers';\nimport {IDispatchFunction} from '../types/common.type';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst NotAuthorisedScreen: FC<IProps> = ({isAuthenticated}: IProps) => (\n  <div className='full-page center-hv'>\n    <Result\n      status='403'\n      title='403'\n      subTitle={\n        isAuthenticated\n          ? 'Sorry, but you dont have permission to view this screen.'\n          : 'You need to sign in to view this screen.'\n      }\n      extra={\n        !isAuthenticated ? <SignIn /> : 'Try signing out and signing in with different account.'\n      }\n    />\n  </div>\n);\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotAuthorisedScreen);\n","import React, {FC} from 'react';\nimport {Result} from 'antd';\nimport {IUserMeta} from '../../types/api.type';\nimport SignOutButton from '../../components/signOutButton';\n\ninterface IProps {\n  user: IUserMeta;\n}\n\nconst Message: FC<IProps> = ({user}: IProps) => (\n  <div>\n    {user.account.email_verified? (\n      <>\n        Your email is verified and our student coordinators will verify documnents provided by you.\n      </>\n    ) : (\n      <>\n        You will receive a email (on\n        {' '}\n        {user.email}\n        ) to verify your email after signup.\n        <br />\n        If your email gets verified then\n        our student coordinators will verify documnents provided by you.\n      </>\n    )}\n    <br />\n    This process normally takes 1-2 days.\n    <br />\n    <br />\n    We will notify you after verification.\n    <br />\n    <SignOutButton />\n  </div>\n);\n\nconst AccountNotVerifiedScreen: FC<IProps> = ({user}: IProps) => (\n  <div className='container center-hv full-page'>\n    <Result\n      status='warning'\n      title='You account is not yet verified'\n      extra={<Message user={user} />}\n    />\n  </div>\n);\n\n\nexport default AccountNotVerifiedScreen;\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Typography} from 'antd';\n\nimport {IDispatchFunction} from '../../types/common.type';\nimport {IReduxState} from '../../reducers';\nimport {IUserMeta} from '../../types/api.type';\nimport NotAuthorisedScreen from '../403.screen';\nimport AccountNotVerifiedScreen from './accountNotVerified.screen';\n\ninterface IStateProps {\n  user: IUserMeta | undefined;\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst {Title} = Typography;\n\nconst HomeStudentScreen: FC<IProps> = (props: IProps) => {\n  const {user, isAuthenticated} = props;\n\n  if (!isAuthenticated) return <NotAuthorisedScreen />;\n  if (user && user.type !== 'S') return <NotAuthorisedScreen />;\n  if(user && !user.account.account_verified) return <AccountNotVerifiedScreen user={user} />;\n\n  return (\n    <div className='container'>\n      <Title>Student Portal</Title>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeStudentScreen);\n"],"sourceRoot":""}