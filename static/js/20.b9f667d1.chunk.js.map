{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","screens/403.screen.tsx","screens/accountNotVerified.screen.tsx","components/sideBar.tsx","components/portal.tsx","constants/routes/student.routes.constant.ts","screens/student/main.student.screen.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","connect","state","isAuthenticated","auth","dispatch","className","status","title","subTitle","extra","SendMailButton","email","useState","setStatus","icon","onClick","a","reSendVerificationMailAPI","loading","Title","Text","Message","user","style","textAlign","level","disabled","account","email_verified","AccountNotVerifiedScreen","maxWidth","JamiaLogo","require","collapsed","toggle","routes","desktopButton","href","e","preventDefault","type","mobileButton","padding","width","height","borderRadius","position","bottom","right","backgroundColor","boxShadow","fontSize","display","alignItems","justifyContent","top","left","selectScreen","transition","src","alt","mode","theme","inlineCollapsed","map","route","index","Item","key","toString","to","path","name","withRouter","props","match","allowedType","extraRoutes","sideRoutes","baseLocation","setCollapsed","useEffect","document","getElementsByTagName","classList","add","remove","account_verified","basename","paddingLeft","opacity","fallback","exact","component","screen","NotFoundScreen","homeRoute","studentSideRoutes","lazy","studentExtraRoutes","MainStudentScreen"],"mappings":"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","file":"static/js/20.b9f667d1.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {FC} from 'react';\nimport {Result} from 'antd';\nimport {connect} from 'react-redux';\n\nimport SignIn from '../components/userAccountButton';\nimport {IReduxState} from '../reducers';\nimport {IDispatchFunction} from '../types/common.type';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst NotAuthorisedScreen: FC<IProps> = ({isAuthenticated}: IProps) => (\n  <div className='full-page center-hv'>\n    <Result\n      status='403'\n      title='403'\n      subTitle={\n        isAuthenticated\n          ? 'Sorry, but you dont have permission to view this screen.'\n          : 'You need to sign in to view this screen.'\n      }\n      extra={\n        !isAuthenticated ? <SignIn /> : 'Try signing out and signing in with different account.'\n      }\n    />\n  </div>\n);\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotAuthorisedScreen);\n","import React, {FC, useState} from 'react';\nimport {Button, Result, Typography} from 'antd';\nimport {IUserMeta} from '../types/api.type';\nimport {reSendVerificationMailAPI} from '../helpers/api/api.helper';\n\ninterface IProps {\n  user: IUserMeta;\n}\n\n// @ts-ignore\nconst SendMailButton: FC<any> = ({email}) => {\n  const [status, setStatus] = useState('not-sent');\n  switch (status) {\n    case 'not-sent':\n    case 'sending':\n      return (\n        <Button\n          icon='mail'\n          onClick={async () => {\n            try {\n              setStatus('sending');\n              await reSendVerificationMailAPI();\n              setStatus('sent');\n            } catch (e) {\n              setStatus('error')\n            }\n          }}\n          loading={status === 'sending'}\n        >\n          {status === 'sending'? 'Sending you mail' : 'Send Verification Mail'}\n        </Button>\n      );\n    case 'error':\n      return 'An error occured while sending your verification mail. Try again later.';\n    default:\n      return `Sent you mail on your email (${email})`\n  }\n};\n\nconst {Title, Text} = Typography;\nconst Message: FC<IProps> = ({user}: IProps) => (\n  <div style={{textAlign: 'left'}}>\n    <Title level={3} style={{textAlign: 'center'}}>Verification Process</Title>\n\n    <Title level={4} disabled={user.account.email_verified}>\n      1. Verification of email\n    </Title>\n    <Text disabled={user.account.email_verified}>\n      You need to verify your email in order to proceed next.\n      <br />\n      We sent you a verification mail, do check your spam folder.\n    </Text>\n\n    <br />\n    <br />\n    <div className='center-hv'>\n      {user.account.email_verified? (\n        <Text disabled>\n          Your email is already verified\n        </Text>\n      ) : <SendMailButton email={user.email} />}\n    </div>\n    <br />\n    <br />\n\n    <Title level={4}>\n      2. Verfication of documents\n    </Title>\n    We will manully verify your document by your respective department.\n    This process will take 1-2 days.\n    <br />\n    We will notify you after compleation of process.\n  </div>\n);\n\nconst AccountNotVerifiedScreen: FC<IProps> = ({user}: IProps) => (\n  <div className='container center-hv full-page'>\n    <div style={{maxWidth: 600}}>\n      <Result\n        status='warning'\n        title='You account is not yet verified'\n        extra={<Message user={user} />}\n      />\n    </div>\n  </div>\n);\n\n\nexport default AccountNotVerifiedScreen;\n","import React, {FC} from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {Icon, Menu} from 'antd';\n\nimport {ISidebarRoute} from '../types/common.type';\n\nimport '../styles/sidebar.scss';\nimport {selectScreen} from '../helpers/screen.helper';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  collapsed: boolean;\n  toggle(): void;\n  routes: Array<ISidebarRoute>;\n  match: string;\n}\n\nconst JamiaLogo = require('../assets/svgs/jamia-logo.svg');\n\nconst SideBar: FC<IProps> = ({collapsed, toggle, routes}: IProps) => {\n\n  const desktopButton = (\n    <a href='#!' className='collapse-button' onClick={(e) => {e.preventDefault(); toggle()}}>\n      <Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\n    </a>\n  );\n\n  const mobileButton = (\n    <a\n      href='#!'\n      onClick={(e) => {e.preventDefault(); toggle()}}\n      style={{\n        padding: 10,\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        position: 'fixed',\n        bottom: 25,\n        right: 25,\n        backgroundColor: '#fff',\n        boxShadow: '2px 0 8px rgba(0, 0, 0, 0.15)',\n        fontSize: 22,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n      <Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\n    </a>\n  );\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: collapsed? selectScreen('-100vw', 0):0,\n      height: '100vh',\n      transition: 'left 0.2s',\n    }}>\n      <div style={{height: 64, backgroundColor: '#FFFFFF'}} className='logo-container center-hv'>\n        <img src={JamiaLogo} alt='University Placement Cell, Logo' />\n      </div>\n      <Menu\n        mode='inline'\n        theme='light'\n        inlineCollapsed={selectScreen(false, collapsed)}\n        className='full-page'\n        style={{\n          width: selectScreen('100vw', collapsed? 80 : 256),\n        }}\n      >\n        {routes.map((route: any, index: number) => (\n          <Menu.Item key={index.toString()}>\n            <Link to={route.path} onClick={() => {selectScreen(toggle, () => {})()}}>\n              <Icon type={route.icon} />\n              <span>{route.name}</span>\n            </Link>\n          </Menu.Item>\n        ))}\n        {selectScreen(mobileButton, desktopButton)}\n      </Menu>\n    </div>\n  );\n};\n\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state: any): IStateProps => ({});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\n","import React, {FC, useState, Suspense, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\n\nimport {IDispatchFunction, IRoute, ISidebarRoute} from '../types/common.type';\nimport {IReduxState} from '../reducers';\nimport {IUserMeta} from '../types/api.type';\nimport NotAuthorisedScreen from '../screens/403.screen';\nimport AccountNotVerifiedScreen from '../screens/accountNotVerified.screen';\nimport SideBar from './sideBar';\nimport NotFoundScreen from '../screens/404.screen';\nimport LoadingScreen from '../screens/loading.screen';\nimport {selectScreen} from '../helpers/screen.helper';\n\ninterface IStateProps {\n  user: IUserMeta | undefined;\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  match: any;\n  sideRoutes: Array<ISidebarRoute>;\n  extraRoutes: Array<IRoute>;\n  baseLocation: string;\n  allowedType: 'C' | 'S';\n}\n\n\nconst Portal: FC<IProps> = (props: IProps) => {\n  const {user, isAuthenticated, match, allowedType,\n    extraRoutes, sideRoutes, baseLocation = '/#/portal/'} = props;\n  const [collapsed, setCollapsed] = useState(selectScreen(true, false));\n\n  const toggle = () => setCollapsed(!collapsed);\n\n\n  useEffect(() => {\n    document.getElementsByTagName('footer')[0].classList.add('footer-hide');\n\n    return () => {\n      document.getElementsByTagName('footer')[0].classList.remove('footer-hide');\n    }\n  });\n\n  if (!isAuthenticated) return <NotAuthorisedScreen />;\n  if (user && user.type !== allowedType) return <NotAuthorisedScreen />;\n  if(user && !user.account.account_verified) return <AccountNotVerifiedScreen user={user} />;\n\n  return (\n    <div className='portal'>\n      <BrowserRouter basename={baseLocation}>\n        <SideBar\n          collapsed={collapsed}\n          toggle={toggle}\n          routes={sideRoutes}\n          match={match.path}\n        />\n        <div\n          className='full-page'\n          style={{\n            paddingLeft: selectScreen(0, collapsed? 80 : 256 ),\n            transition: '0.4s',\n            opacity: collapsed? 1 : selectScreen(0, 1),\n          }}>\n          <Suspense fallback={<LoadingScreen />}>\n            <Switch>\n              {sideRoutes.map((route, index) => (\n                <Route\n                  key={index.toString()}\n                  exact\n                  path={route.path}\n                  component={route.screen}\n                />\n              ))}\n              {extraRoutes.map((route, index) => (\n                <Route\n                  key={index.toString()}\n                  exact\n                  path={route.path}\n                  component={route.screen}\n                />\n              ))}\n              <Route component={NotFoundScreen} homeRoute={baseLocation} />\n            </Switch>\n          </Suspense>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(\n  // @ts-ignore\n  Portal\n));\n","import {lazy} from 'react';\nimport {IRoute, ISidebarRoute} from '../../types/common.type';\n\nexport const studentSideRoutes: Array<ISidebarRoute> = [\n  {\n    name: 'Home',\n    icon: 'home',\n    path: '/',\n    screen: lazy(() => import('../../screens/student/home.student.screen'))\n  }, {\n    name: 'Recruitment',\n    icon: 'appstore',\n    path: '/recruitment/',\n    screen: lazy(() => import('../../screens/student/recruitment.student.screen'))\n  }, {\n    name: 'Internships',\n    icon: 'rocket',\n    path: '/internships/',\n    screen: lazy(() => import('../../screens/student/internships.student.screen'))\n  }, {\n    name: 'Courses',\n    icon: 'book',\n    path: '/courses/',\n    screen: lazy(() => import('../../screens/student/courses.student.screen'))\n  }, {\n    name: 'Your Resume',\n    icon: 'solution',\n    path: '/resume/',\n    screen: lazy(() => import('../../screens/student/resume.student.screen'))\n  }, {\n    name: 'Account Settings',\n    icon: 'setting',\n    path: '/settings/',\n    screen: lazy(() => import('../../screens/student/settings.student.screen'))\n  }\n];\n\nexport const studentExtraRoutes: Array<IRoute> = [\n  {\n    title: 'Job Details',\n    path: '/company/:company/job/:job/',\n    screen: lazy(() => import('../../screens/student/jobDetails.student.screen'))\n  }, {\n    title: 'Course details',\n    path: '/courses/:course/',\n    screen: lazy(() => import('../../screens/student/courseDetails.student.screen'))\n  }\n];\n","import React, {FC} from 'react';\nimport Portal from '../../components/portal';\nimport {studentExtraRoutes,\n  studentSideRoutes} from '../../constants/routes/student.routes.constant';\n\ninterface IProps {\n}\n\n\nconst MainStudentScreen: FC<IProps> = () => (\n  // @ts-ignore\n  <Portal\n    sideRoutes={studentSideRoutes}\n    extraRoutes={studentExtraRoutes}\n    baseLocation='/#/portal/student/'\n    allowedType='S'\n  />\n);\n\n\nexport default MainStudentScreen;\n"],"sourceRoot":""}