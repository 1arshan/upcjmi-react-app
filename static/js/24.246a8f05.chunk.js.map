{"version":3,"sources":["screens/403.screen.tsx","screens/company/home.company.screen.tsx"],"names":["connect","state","isAuthenticated","auth","dispatch","className","status","title","subTitle","extra","Title","user","props","type"],"mappings":"4JAwCeA,iBAPS,SAACC,GAAD,MAAsC,CAC5DC,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAkD,KAE9DJ,EAxByB,SAAC,GAAD,IAAEE,EAAF,EAAEA,gBAAF,OACtC,yBAAKG,UAAU,uBACb,uBACEC,OAAO,MACPC,MAAM,MACNC,SACEN,EACI,2DACA,2CAENO,MACGP,EAA+B,yDAAb,kBAAC,IAAD,a,4FCTpBQ,E,IAAAA,MAwBQV,uBARS,SAACC,GAAD,MAAsC,CAC5DU,KAAMV,EAAME,KAAKQ,KACjBT,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAkD,KAE9DJ,EAtBuB,SAACY,GAAmB,IACjDD,EAAyBC,EAAzBD,KAEP,OAFgCC,EAAnBV,gBAITS,GAAsB,MAAdA,EAAKE,KAAqB,kBAAC,IAAD,MAGpC,yBAAKR,UAAU,aACb,kBAACK,EAAD,wBANyB,kBAAC,IAAD","file":"static/js/24.246a8f05.chunk.js","sourcesContent":["import React, {FC} from 'react';\nimport {Result} from 'antd';\nimport {connect} from 'react-redux';\n\nimport SignIn from '../components/userAccountButton';\nimport {IReduxState} from '../reducers';\nimport {IDispatchFunction} from '../types/common.type';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst NotAuthorisedScreen: FC<IProps> = ({isAuthenticated}: IProps) => (\n  <div className='full-page center-hv'>\n    <Result\n      status='403'\n      title='403'\n      subTitle={\n        isAuthenticated\n          ? 'Sorry, but you dont have permission to view this screen.'\n          : 'You need to sign in to view this screen.'\n      }\n      extra={\n        !isAuthenticated ? <SignIn /> : 'Try signing out and signing in with different account.'\n      }\n    />\n  </div>\n);\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotAuthorisedScreen);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Typography} from 'antd';\n\nimport {IDispatchFunction} from '../../types/common.type';\nimport {IReduxState} from '../../reducers';\nimport {IUserMeta} from '../../types/api.type';\nimport NotAuthorisedScreen from '../403.screen';\n\ninterface IStateProps {\n  user: IUserMeta | undefined;\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst {Title} = Typography;\n\nconst HomeCompanyScreen: FC<IProps> = (props: IProps) => {\n  const {user, isAuthenticated} = props;\n\n  if (!isAuthenticated) return <NotAuthorisedScreen />;\n\n  if (user && user.type !== 'C') return <NotAuthorisedScreen />;\n\n  return (\n    <div className='container'>\n      <Title>Company Portal</Title>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: IDispatchFunction): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomeCompanyScreen);\n"],"sourceRoot":""}