{"version":3,"sources":["constants/paths.constant.ts","components/auth/google.signOut.tsx","components/auth/default.signOut.tsx","components/signOutButton.tsx","components/userAccountButton.tsx","assets/svgs/jamia-logo.svg","actions/index.ts","helpers/notification.helper.ts","reducers/auth.reducer.ts","reducers/navigator.reducer.ts","constants/routes.constant.ts","reducers/index.ts","screens/404.screen.tsx","components/headerPills.tsx","components/mobileDrawer.tsx","components/appHeader.tsx","components/screen.tsx","components/footer.tsx","main.tsx","App.tsx","serviceWorker.js","index.js","constants/localStorage.constant.ts","components/xLink.tsx","constants/externalLinks.constant.ts","helpers/api/loader.api.helper.ts","actions/auth.action.ts","helpers/api/api.helper.ts","constants/credentials.constant.ts","screens/loading.screen.tsx","helpers/screen.helper.ts"],"names":["HOME_PATH","CONTACT_PATH","SIGN_IN_PATH","SIGN_UP_PATH","PRIVACY_POLICY_PATH","TERMS_AND_CONDITION_PATH","STUDENT_PORTAL_HOME_PATH","COMPANY_PORTAL_HOME_PATH","withRouter","connect","state","isAuthenticated","auth","dispatch","signOut","redirect","signOutAction","props","history","clientId","GOOGLE_OAUTH_CLIENT_ID","onLogoutSuccess","render","renderProps","onClick","redirectFunction","push","icon","type","signedWith","to","size","module","exports","SIGN_IN_INITIATED","SIGN_IN_SUCCESS","SIGN_OUT","SIGNING_IN_FAILED","CONNECTED_WITH_SERVER","openNotificationWithIcon","message","desc","description","signInAgainNotification","errorGettingUserInfoNotification","signInSuccessNotification","name","signOutSuccessNotification","signingInErrorNotification","cannotConnectToServerNotification","error","duration","placement","userExistsWithThisEmail","email","signUpSuccessfullNotification","signUpFailedNotification","detail","reactHtmlParser","replace","htmlNotification","initialState","inProgress","routes","path","title","screen","lazy","connected","combineReducers","action","setState","override","user","navigator","NotFoundScreen","className","status","subTitle","extra","Item","HeaderPills","mode","style","height","border","key","Title","MobileDrawer","showDrawer","visible","onClose","window","addEventListener","this","removeEventListener","toRender","selectScreen","closable","React","Component","JamiaLogo","require","AppHeader","handelScroll","prevScrollPos","currentScrollPos","pageYOffset","document","body","html","documentElement","pageHeight","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","flex","xs","md","xxl","justifyContent","src","alt","color","fontSize","Screen","ScreenComponent","useEffect","fallback","Footer","level","href","UNIVERSITY_PLACEMENT_CELL","JAMIA_MILLIA_ISLAMIA","PRIVACY_POLICY","TERMS_AND_CONDITION","LICENCE","REPO_LINK","BUG_REPORT","FEATURE_REQUEST","checkUser","checkUserAction","map","route","index","exact","undefined","component","toString","store","createStore","rootReducer","applyMiddleware","thunk","App","componentDidMount","updateDimensions","scrollTop","componentWillUnmount","width","innerWidth","scrollTo","Boolean","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","API_TOKENS","SIGNED_IN_TYPE","XLink","children","newLine","target","rel","axios","defaults","baseURL","BASE_URL","headers","get","loadOpenUrl","url","a","config","Promise","resolve","reject","res","data","catch","err","response","getAccessToken","reactLocalStorage","getObject","accessToken","expires","Date","currentTime","tokens","access","method","refresh","newToken","setObject","code","er","loadSecureUrl","Authorization","fakeRedirect","saveToken","token","saveSignIn","getState","set","makeUserSignIn","apiCall","signInWithEmailAction","password","signINWithEmailAPI","signInWithGoogleAction","id","googleToken","signInWithGoogleAPI","signIn","account","getUserMetaDetailAPI","pingAPI","remove","signUpStudentAPI","doesUserExistsAPI","params","process","GOOGLE_RECAPTCHA_KEY","LoadingScreen","tip","deviceType","sm","lg","xl","device"],"mappings":"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","file":"static/js/main.1359b6f4.chunk.js","sourcesContent":["export const HOME_PATH = '/';\nexport const CONTACT_PATH = '/contact/';\nexport const SIGN_IN_PATH = '/sign-in/';\nexport const SIGN_UP_PATH = '/sign-up/';\n\nexport const PRIVACY_POLICY_PATH = '/privacy-policy/';\nexport const TERMS_AND_CONDITION_PATH = '/terms-and-conditions/';\n\nexport const STUDENT_PORTAL_HOME_PATH = '/student/portal/';\nexport const COMPANY_PORTAL_HOME_PATH = '/company/portal/';\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {GoogleLogout} from 'react-google-login';\nimport {withRouter} from 'react-router-dom';\n\nimport {GOOGLE_OAUTH_CLIENT_ID} from '../../constants/credentials.constant';\nimport {IReduxState} from '../../reducers';\nimport {signOutAction} from '../../actions/auth.action';\n\n// eslint-disable-next-line no-undef\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: any;\n  redirect: boolean;\n}\n\nconst GoogleSignOut: FC<IProps> = (props: IProps) => {\n  const {history, redirect} = props;\n\n  return (\n    <GoogleLogout\n      clientId={GOOGLE_OAUTH_CLIENT_ID || ''}\n      onLogoutSuccess={() => {}}\n      render={renderProps => (\n        <Button\n          onClick={() => {\n            const redirectFunction = redirect ? history.push : () => {};\n            props.signOut(redirectFunction);\n            renderProps.onClick();\n          }}\n          icon='logout'\n          type='link'>\n          Sign Out\n        </Button>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(GoogleSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {withRouter} from 'react-router-dom';\n\nimport {signOutAction} from '../../actions/auth.action';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: {\n    push: any;\n  };\n  redirect: boolean;\n}\n\nconst DefaultSignOut: FC<IProps> = ({signOut, history, redirect = true}: IProps) => (\n  <Button\n    onClick={() => {\n      const redirectFunction = redirect ? history.push : () => {};\n      signOut(redirectFunction);\n    }}\n    icon='logout'\n    type='link'>\n    Sign Out\n  </Button>\n);\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state: any): IStateProps => ({});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(DefaultSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\n\nimport {ISignInOptions} from '../types/common.type';\nimport {IReduxState} from '../reducers';\nimport GoogleSignOut from './auth/google.signOut';\nimport DefaultSignOut from './auth/default.signOut';\n\ninterface IStateProps {\n  signedWith: ISignInOptions;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  redirect?: boolean;\n}\n\nconst SignOutButton: FC<IProps> = (props: IProps) => {\n  const {signedWith = false, redirect = true} = props;\n\n  switch (signedWith) {\n    case 'G':\n      return <GoogleSignOut redirect={redirect} />;\n    case 'E':\n    case 'U':\n    default:\n      return <DefaultSignOut redirect={redirect} />;\n  }\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  signedWith: state.auth.signedWith,\n});\n\nexport default connect(mapStateToProps)(SignOutButton);\n","import React, {FC} from 'react';\nimport {Button} from 'antd';\nimport {connect} from 'react-redux';\n\nimport {Link} from 'react-router-dom';\nimport {IReduxState} from '../reducers';\nimport {SIGN_IN_PATH} from '../constants/paths.constant';\nimport SignOutButton from './signOutButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst UserAccountButton: FC<IProps> = (props: IProps) => {\n  const {isAuthenticated} = props;\n\n  if (isAuthenticated) return <SignOutButton />;\n\n  return (\n    <Link to={SIGN_IN_PATH}>\n      <Button type='primary' size='large' icon='login'>\n        Sign In\n      </Button>\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(UserAccountButton);\n","module.exports = __webpack_public_path__ + \"static/media/jamia-logo.1b80d421.svg\";","// Auth\nexport const SIGN_IN_INITIATED = 'SIGN_IN_INITIATED';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGNING_IN_FAILED = 'SIGNING_IN_FAILED';\n\n// Navigator\nexport const CONNECTED_WITH_SERVER = 'CONNECTED_WITH_SERVER';\n","import {notification} from 'antd';\nimport reactHtmlParser from 'react-html-parser';\n\nexport const openNotificationWithIcon = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  desc: string = '',\n): void => {\n  // @ts-ignore\n  notification[type]({\n    message,\n    description: desc,\n  });\n};\nexport const htmlNotification = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  desc: string = '',\n): void => {\n  openNotificationWithIcon(\n    type,\n    message,\n    // @ts-ignore\n    reactHtmlParser(desc.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')),\n  );\n};\n\nexport const signInAgainNotification = () =>\n  openNotificationWithIcon(\n    'warning',\n    'Please, SignIn Again',\n    'We SignOut user after 24hr of login',\n  );\nexport const errorGettingUserInfoNotification = () =>\n  openNotificationWithIcon(\n    'error',\n    'Please, SignIn Again',\n    'We are having error in getting your info',\n  );\nexport const signInSuccessNotification = (name: string) =>\n  openNotificationWithIcon('success', `Welcome ${name}`, 'You successfully signed in.');\n\nexport const signOutSuccessNotification = () =>\n  openNotificationWithIcon(\n    'success',\n    'Thank you for giving your time.',\n    'You successfully signed out.',\n  );\n\nexport const signingInErrorNotification = (\n  message: string = 'An unknown error occurred during sign in',\n) => openNotificationWithIcon('error', message, 'Create a new account.');\n\nexport const signUpWithGoogleFailed = () =>\n  openNotificationWithIcon('error', 'Sign Up with Google failed', 'Please try again.');\n\nexport const cannotConnectToServerNotification = () =>\n  notification.error({\n    message: 'Error connecting to server',\n    description:\n      'Try refreshing page. After refresh if problem persist clear data and cookies. ' +\n      'If problem doesnt resolve mail to faisalmanzer11@gmail.com.',\n    duration: 1000,\n    placement: 'bottomRight',\n  });\n\nexport const userExistsWithThisEmail = (email: string) =>\n  openNotificationWithIcon(\n    'error',\n    `Email ${email} is associated with another account.`,\n    'Try signing in or try forgetting password.',\n  );\n\nexport const signUpSuccessfullNotification = () =>\n  openNotificationWithIcon('success', 'Account created you successfull');\n\nexport const signUpFailedNotification = (detail: string) =>\n  htmlNotification('error', 'Failed to create account', detail);\n","import {IReducerAction, ISignInOptions} from '../types/common.type';\nimport {SIGN_IN_INITIATED, SIGN_IN_SUCCESS, SIGN_OUT, SIGNING_IN_FAILED} from '../actions';\nimport {IUserMeta} from '../types/api.type';\n\nexport interface IAuthState {\n  isAuthenticated: boolean;\n  inProgress: boolean;\n  user?: IUserMeta;\n  signedWith: ISignInOptions;\n}\n\nconst initialState: IAuthState = {\n  isAuthenticated: false,\n  inProgress: false,\n  signedWith: 'U',\n};\n\nexport const auth = (state: IAuthState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<IAuthState>): IAuthState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case SIGN_IN_SUCCESS:\n      return setState({\n        isAuthenticated: true,\n        user: action.user,\n        signedWith: action.signedWith,\n        inProgress: false,\n      });\n\n    case SIGN_IN_INITIATED:\n      return {\n        ...initialState,\n        inProgress: true,\n      };\n\n    case SIGN_OUT:\n      return initialState;\n\n    case SIGNING_IN_FAILED:\n      return setState({inProgress: false});\n\n    default:\n      return state;\n  }\n};\n","import {IReducerAction, IRoute} from '../types/common.type';\nimport {COMMON_ROUTES} from '../constants/routes.constant';\nimport {CONNECTED_WITH_SERVER} from '../actions';\n\nexport interface INavigatorState {\n  routes: Array<IRoute>;\n  connected: boolean;\n}\n\nconst initialState: INavigatorState = {\n  routes: COMMON_ROUTES,\n  connected: false,\n};\n\nexport const navigator = (state: INavigatorState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<INavigatorState>): INavigatorState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case CONNECTED_WITH_SERVER:\n      return setState({connected: true});\n\n    default:\n      return state;\n  }\n};\n","import {lazy} from 'react';\nimport {IRoute} from '../types/common.type';\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  CONTACT_PATH,\n  HOME_PATH, PRIVACY_POLICY_PATH,\n  SIGN_IN_PATH,\n  SIGN_UP_PATH,\n  STUDENT_PORTAL_HOME_PATH, TERMS_AND_CONDITION_PATH,\n} from './paths.constant';\n\nexport const COMMON_ROUTES: Array<IRoute> = [\n  {\n    path: HOME_PATH,\n    title: 'Welcome to University Placement Cell, Jamia Millia Islamia',\n    screen: lazy(() => import('../screens/home.screen')),\n  },\n  {\n    path: CONTACT_PATH,\n    title: 'Contact US || UPC JMI',\n    screen: lazy(() => import('../screens/contact.screen')),\n  },\n  {\n    path: STUDENT_PORTAL_HOME_PATH,\n    title: 'Student Home || UPC JMI',\n    screen: lazy(() => import('../screens/student/home.student.screen')),\n  },\n  {\n    path: COMPANY_PORTAL_HOME_PATH,\n    title: 'Company Home || UPC JMI',\n    screen: lazy(() => import('../screens/company/home.company.screen')),\n  },\n  {\n    path: SIGN_IN_PATH,\n    title: 'Sign In to UPC Portal',\n    screen: lazy(() => import('../screens/signIn.screen')),\n  },\n  {\n    path: SIGN_UP_PATH,\n    title: 'Create new student account || UPC JMI',\n    screen: lazy(() => import('../screens/signUp.screen')),\n  },\n  {\n    path: TERMS_AND_CONDITION_PATH,\n    title: 'Terms and Conditions || UPC JMI',\n    screen: lazy(() => import('../screens/termsAndConditions.screen')),\n  },\n  {\n    path: PRIVACY_POLICY_PATH,\n    title: 'Privacy policy || UPC JMI',\n    screen: lazy(() => import('../screens/privacyPolicy.screen'))\n  }\n];\n","import {combineReducers} from 'redux';\nimport {auth, IAuthState} from './auth.reducer';\nimport {navigator, INavigatorState} from './navigator.reducer';\n\nexport interface IReduxState {\n  auth: IAuthState;\n  navigator: INavigatorState;\n}\n\nexport default combineReducers({\n  auth,\n  navigator,\n});\n","import React, {FC} from 'react';\nimport {Result, Button} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {HOME_PATH} from '../constants/paths.constant';\n\ninterface IProps {}\n\nconst NotFoundScreen: FC<IProps> = () => (\n  <div className='full-page center-hv'>\n    <Result\n      status='404'\n      title='404'\n      subTitle='Sorry, the page you visited does not exist.'\n      extra={(\n        <Link to={HOME_PATH}>\n          <Button type='primary'>Back Home</Button>\n        </Link>\n)}\n    />\n  </div>\n);\n\nexport default NotFoundScreen;\n","import React, {FC} from 'react';\nimport {Icon, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport SignIn from './userAccountButton';\nimport {CONTACT_PATH, SIGN_UP_PATH, STUDENT_PORTAL_HOME_PATH} from '../constants/paths.constant';\n\ninterface IProps {\n  mode: 'vertical' | 'horizontal'\n}\n\nconst {Item} = Menu;\n\nconst HeaderPills: FC<IProps> = ({mode='horizontal'}: IProps) => (\n  <div>\n    <div className='header-pill center-hv' style={{height: '100%'}}>\n      <SignIn />\n    </div>\n\n    <div className='header-pill'>\n      <Menu mode={mode} style={{border: 0}}>\n        <Item key='contact'>\n          <Link to={CONTACT_PATH}>\n            <Icon type='phone' />\n            Contact Us\n          </Link>\n        </Item>\n\n        <Item key='appstore'>\n          <Link to={STUDENT_PORTAL_HOME_PATH}>\n            <Icon type='appstore' />\n            Placement Portal\n          </Link>\n        </Item>\n\n        <Item key='sign-up'>\n          <Link to={SIGN_UP_PATH}>\n            <Icon type='user-add' />\n            Create New Account\n          </Link>\n        </Item>\n      </Menu>\n    </div>\n  </div>\n);\n\n\nexport default HeaderPills;\n","import React from 'react';\nimport { Drawer, Icon, Typography } from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport {selectScreen} from '../helpers/screen.helper';\nimport HeaderPills from './headerPills';\nimport {HOME_PATH} from '../constants/paths.constant';\n\ninterface IProps {\n}\n\ninterface IState {\n  visible: boolean\n}\n\nconst {Title} = Typography;\n\nclass MobileDrawer extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = { visible: false };\n  }\n\n  componentDidMount(): void {\n    window.addEventListener('hashchange', this.onClose)\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('hashchange', this.onClose)\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const toRender = selectScreen(true, true, false);\n    const {visible} = this.state;\n\n    if(!toRender)\n      return null;\n\n    return (\n      <div>\n        <div\n          className='drawer-handel'\n        >\n          <Icon type='double-left' onClick={this.showDrawer} />\n        </div>\n        <Drawer\n          // title='Basic Drawer'\n          placement='right'\n          closable={false}\n          onClose={this.onClose}\n          visible={visible}\n        >\n          <div className='center-hv'>\n            <Link to={HOME_PATH}>\n              <Title>\n                UPC JMI\n              </Title>\n            </Link>\n          </div>\n\n          <HeaderPills mode='vertical' />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\n\nexport default MobileDrawer;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Row, Col} from 'antd';\n\nimport {\n  HOME_PATH,\n} from '../constants/paths.constant';\nimport {selectScreen} from '../helpers/screen.helper';\nimport HeaderPills from './headerPills';\nimport MobileDrawer from './mobileDrawer';\n\nconst JamiaLogo = require('../assets/svgs/jamia-logo.svg');\n\ninterface IProps {}\n\ninterface IState {\n  prevScrollPos: number;\n  visible: boolean;\n}\n\nclass AppHeader extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      prevScrollPos: window.pageYOffset,\n      visible: true,\n    };\n  }\n\n  componentDidMount(): void {\n    window.addEventListener('scroll', this.handelScroll);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handelScroll);\n  }\n\n  handelScroll = () => {\n    const {prevScrollPos} = this.state;\n\n    const currentScrollPos = window.pageYOffset;\n    const {body, documentElement: html} = document;\n\n    const pageHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight,\n    );\n\n    const visible =\n      prevScrollPos > currentScrollPos ||\n      currentScrollPos < 64 ||\n      pageHeight - window.innerHeight - currentScrollPos < 64;\n\n    this.setState({\n      prevScrollPos: currentScrollPos,\n      visible,\n    });\n  };\n\n  render() {\n    const {visible} = this.state;\n\n    return (\n      <>\n        <header className={`${!visible ? 'nav-up' : ''}`}>\n          <Row style={{flex: 1}}>\n            <Link to={HOME_PATH}>\n              <Col\n                xs={24}\n                md={6}\n                xxl={4}\n                className='logo-container'\n                style={{justifyContent: selectScreen('center', 'center', null)}}>\n                <img src={JamiaLogo} alt='University Placement Cell, Logo' />\n              &nbsp;&nbsp;&nbsp;\n                <div style={{color: '#000000', fontSize: '0.9rem'}}>\n                  <b>University Placement Cell</b>\n                  <br />\n                Jamia Millia Islamia\n                </div>\n              </Col>\n            </Link>\n\n            <Col xs={0} md={18} xxl={20}>\n              <HeaderPills mode='horizontal' />\n            </Col>\n          </Row>\n        </header>\n        <MobileDrawer />\n      </>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, {FC, useEffect, Suspense} from 'react';\nimport LoadingScreen from '../screens/loading.screen';\n\ninterface IProps {\n  title: string | undefined;\n  screen: any;\n}\n\nconst Screen: FC<IProps> = ({title, screen: ScreenComponent}: IProps) => {\n  useEffect(() => {\n    document.title = title || 'University Placement Cell, Jamia Millia Islamia';\n  }, [title]);\n\n  return (\n    <Suspense fallback={<LoadingScreen />}>\n      <ScreenComponent />\n    </Suspense>\n  );\n};\n\nexport default Screen;\n","import React, {FC} from 'react';\nimport {Typography, Row, Col, Icon} from 'antd';\n\nimport XLink from './xLink';\nimport {\n  BUG_REPORT,\n  FEATURE_REQUEST,\n  JAMIA_MILLIA_ISLAMIA,\n  LICENCE, PRIVACY_POLICY,\n  REPO_LINK, TERMS_AND_CONDITION,\n  UNIVERSITY_PLACEMENT_CELL,\n} from '../constants/externalLinks.constant';\n\ninterface IProps {\n}\n\nconst {Title} = Typography;\n\n\n// eslint-disable-next-line no-unused-vars\nconst Footer: FC<IProps> = (props: IProps) => (\n  <footer>\n    <Row>\n      <Col xs={24} md={12}>\n        <Title level={4}>\n            External links\n        </Title>\n        <XLink href={UNIVERSITY_PLACEMENT_CELL}>\n            Placement cell on Jamia&#39;s officail site\n        </XLink>\n        <XLink href={JAMIA_MILLIA_ISLAMIA}>Jamia Millia Islamia</XLink>\n        <XLink href={PRIVACY_POLICY}>Privacy policy</XLink>\n        <XLink href={TERMS_AND_CONDITION}>Terms and Condition</XLink>\n      </Col>\n      <Col xs={24} md={12}>\n        <Title level={4}>\n          Application\n        </Title>\n        This is site is an open source application licened under &nbsp;\n        <XLink href={LICENCE}>Apache License 2.0</XLink>\n\n        <XLink href={REPO_LINK}>\n          <Icon type='github' />\n          &nbsp; GitHub Repository\n        </XLink>\n        <XLink href={BUG_REPORT}>Report a Bug</XLink>\n        <XLink href={FEATURE_REQUEST}>Request feature</XLink>\n      </Col>\n    </Row>\n    <br />\n    <br />\n    <div className='center-hv'>\n      <Title level={4}>\n        &copy; 2019 University Placement Cell, Jamia Millia Islamia\n      </Title>\n    </div>\n  </footer>\n);\n\n\nexport default Footer;\n","import React, {Suspense, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {IRoute} from './types/common.type';\n\nimport LoadingScreen from './screens/loading.screen';\nimport NotFoundScreen from './screens/404.screen';\nimport AppHeader from './components/appHeader';\nimport {checkUserAction} from './actions/auth.action';\nimport Screen from './components/screen';\nimport Footer from './components/footer';\n\ninterface IStateProps {\n  routes: Array<IRoute>;\n}\n\ninterface IDispatchProps {\n  checkUser(): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst Main = ({routes, checkUser}: IProps) => {\n  useEffect(() => {\n    checkUser();\n  }, [checkUser]);\n\n  return (\n    <Suspense fallback={<LoadingScreen />}>\n      <AppHeader />\n      <main>\n        <Switch>\n          {routes.map((route, index) => (\n            <Route\n              exact={route.exact === undefined ? true : route.exact}\n              path={route.path}\n              component={() => <Screen title={route.title} screen={route.screen} />}\n              key={index.toString()}\n            />\n          ))}\n          <Route component={NotFoundScreen} />\n        </Switch>\n      </main>\n      <Footer />\n    </Suspense>\n  );\n};\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  routes: state.navigator.routes,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  checkUser: () => dispatch(checkUserAction()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n","/**\n * @format\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport rootReducer from './reducers';\nimport Main from './main';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\ninterface IProps {}\n\ninterface IState {\n  width: number;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      // eslint-disable-next-line react/no-unused-state\n      width: window.innerWidth,\n    };\n  }\n\n  componentDidMount = (): void => {\n    window.addEventListener('resize', this.updateDimensions);\n    window.addEventListener('hashchange', this.scrollTop)\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener('resize', this.updateDimensions);\n    window.removeEventListener('hashchange', this.scrollTop)\n  };\n\n  updateDimensions = (): void => {\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({width: window.innerWidth});\n  };\n\n  scrollTop = (): void => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    console.log('ooooo');\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <Main />\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const API_TOKENS = 'APITokens';\nexport const SIGNED_IN_TYPE = 'SignedType';\n","import React, {FC} from 'react';\n\ninterface IProps {\n  href: string,\n  children: any,\n  newLine?: boolean;\n}\n\nconst XLink: FC<IProps> = ({href, children, newLine=true}: IProps) => (\n  <span>\n    <a href={href} target='_blank' rel='noopener noreferrer'>\n      {children}\n    </a>\n    {newLine? <br /> : null}\n  </span>\n);\n\nexport default XLink;\n","export const BUG_REPORT =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=alhaqhassan&labels=bug&template=bug_report.md&title=';\n\nexport const FEATURE_REQUEST =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=Faisal-Manzer&labels=enhancement&template=feature_request.md&title=';\nexport const REPO_LINK =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app';\n\nexport const FAISAL_MANZER_GITHUB = 'https://github.com/Faisal-Manzer';\nexport const HASSAN_GITHUB = 'https://github.com/allhassan';\nexport const LICENCE = 'https://github.com/Faisal-Manzer/upcjmi-react-app/blob/master/LICENCE';\nexport const UNIVERSITY_PLACEMENT_CELL =\n  'https://www.jmi.ac.in/studyatjamia/cell/upc/introduction';\nexport const JAMIA_MILLIA_ISLAMIA =\n  'https://jmi.ac.in';\nexport const TERMS_AND_CONDITION =\n  '/#/terms-and-conditions/';\nexport const PRIVACY_POLICY =\n  '/#/privacy-policy/';\n","import axios from 'axios';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {API_TOKENS} from '../../constants/localStorage.constant';\nimport {signInAgainNotification, errorGettingUserInfoNotification} from '../notification.helper';\nimport {IAccessToken} from '../../types/api.type';\nimport {IObject} from '../../types/common.type';\nimport {BASE_URL} from '../../constants/credentials.constant';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-urlencoded';\n\nconst REFRESH_ACCESS_TOKEN = 'auth/token/refresh/';\n\nexport const loadOpenUrl = async (url: string, config: IObject = {}): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    axios(url, config)\n      .then(res => resolve(res.data))\n      .catch(err => reject(err.response));\n  });\n};\n\nconst getAccessToken = () => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    const data = reactLocalStorage.getObject(API_TOKENS);\n\n    if (!data) return reject('No User found');\n\n    let accessToken = '';\n    let expires = new Date(data.expires * 1000);\n    const currentTime = new Date();\n\n    if (expires > currentTime) {\n      accessToken = data.tokens.access;\n    } else {\n      try {\n        const newToken: IAccessToken = await loadOpenUrl(REFRESH_ACCESS_TOKEN, {\n          method: 'post',\n          data: {\n            refresh: data.tokens.refresh,\n          },\n        });\n        accessToken = newToken.access;\n        expires = new Date(newToken.expires * 1000);\n\n        reactLocalStorage.setObject(API_TOKENS, {\n          tokens: {\n            ...data.tokens,\n            access: accessToken,\n          },\n          expires,\n        });\n      } catch (e) {\n        try {\n          if (e.data.code === 'token_not_valid') signInAgainNotification();\n          else errorGettingUserInfoNotification();\n        } catch (er) {\n          // pass\n        }\n\n        return reject('Error refreshing token');\n      }\n    }\n\n    return resolve(accessToken);\n  });\n};\n\nexport const loadSecureUrl = (url: string, config: IObject = {}): Promise<any> => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    try {\n      const data = await loadOpenUrl(url, {\n        ...config,\n        headers: {\n          Authorization: `Bearer ${await getAccessToken()}`,\n        },\n      });\n      return resolve(data);\n    } catch (e) {\n      return reject(e);\n    }\n  });\n};\n","import {Dispatch} from 'redux';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {\n  getUserMetaDetailAPI,\n  pingAPI,\n  signINWithEmailAPI,\n  signInWithGoogleAPI,\n} from '../helpers/api/api.helper';\nimport {\n  CONNECTED_WITH_SERVER,\n  SIGN_IN_INITIATED,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT,\n  SIGNING_IN_FAILED,\n} from './index';\nimport {API_TOKENS, SIGNED_IN_TYPE} from '../constants/localStorage.constant';\n\nimport {IAccessToken, ISignInToken, IUserMeta} from '../types/api.type';\nimport {\n  cannotConnectToServerNotification,\n  openNotificationWithIcon,\n  signingInErrorNotification,\n  signInSuccessNotification,\n  signOutSuccessNotification,\n} from '../helpers/notification.helper';\nimport {IGetStateFunction, ISignInOptions} from '../types/common.type';\nimport {HOME_PATH} from '../constants/paths.constant';\n\n// eslint-disable-next-line no-unused-vars\nconst fakeRedirect = (path: string): void => {};\n\nconst saveToken = (token: IAccessToken): void => {\n  reactLocalStorage.setObject(API_TOKENS, {\n    tokens: token,\n    expires: token.expires,\n  });\n};\n\nconst saveSignIn = (user: IUserMeta, signedWith: ISignInOptions = 'U') =>\n  // eslint-disable-next-line no-unused-vars\n  async (dispatch: Dispatch, getState: IGetStateFunction) => {\n    dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n    reactLocalStorage.set(SIGNED_IN_TYPE, signedWith);\n    signInSuccessNotification(user.name);\n  };\n\nconst makeUserSignIn = (apiCall: any, signedWith: ISignInOptions = 'U') => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  try {\n    dispatch({type: SIGN_IN_INITIATED});\n    const {user, token}: ISignInToken = await apiCall();\n    saveToken(token);\n    dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n    saveSignIn(user, signedWith)(dispatch, getState);\n  } catch (e) {\n    dispatch({type: SIGNING_IN_FAILED});\n    signingInErrorNotification((e.data && e.data.detail) || undefined);\n  }\n};\n\nexport const signInWithEmailAction = (email: string, password: string) => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  const apiCall = () => signINWithEmailAPI(email, password);\n  makeUserSignIn(apiCall, 'E')(dispatch, getState);\n};\n\nexport const signInWithGoogleAction = (id: string, googleToken: string) => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  const apiCall = () => signInWithGoogleAPI(id, googleToken);\n  makeUserSignIn(apiCall, 'G')(dispatch, getState);\n};\n\nexport const signIn = (account: any) => (dispatch: Dispatch, getState: IGetStateFunction) => {\n  switch (account.type) {\n    case 'E':\n      signInWithEmailAction(account.email, account.password)(dispatch, getState);\n      break;\n    case 'G':\n      signInWithGoogleAction(account.id, account.token)(dispatch, getState);\n      break;\n    default:\n      openNotificationWithIcon('error', 'Unkown signing');\n  }\n};\n\nexport const checkUserAction = () => async (dispatch: Dispatch, getState: IGetStateFunction) => {\n  try {\n    if (reactLocalStorage.get(API_TOKENS)) {\n      const user = await getUserMetaDetailAPI();\n      saveSignIn(user, reactLocalStorage.get(SIGNED_IN_TYPE))(dispatch, getState);\n    } else {\n      await pingAPI();\n    }\n\n    dispatch({type: CONNECTED_WITH_SERVER});\n  } catch (e) {\n    // pass\n    cannotConnectToServerNotification();\n  }\n};\n\nexport const signOutAction = (redirect: any = fakeRedirect) => (dispatch: Dispatch) => {\n  reactLocalStorage.remove(API_TOKENS);\n  dispatch({type: SIGN_OUT});\n  signOutSuccessNotification();\n  redirect(HOME_PATH);\n};\n","import {loadOpenUrl, loadSecureUrl} from './loader.api.helper';\nimport {IPing, ISignInToken, IUserExists, IUserMeta} from '../../types/api.type';\nimport {ISignUpData} from '../../types/signUp.type';\n\nconst UPing = 'ping/';\n\nconst USignInWithEmail = 'auth/sign-in/email/';\nconst USignInWithGoogle = 'auth/sign-in/google/';\n\nconst USignUpStudent = 'student/sign-up/';\n// const USignUpCompanyRepresentative = 'company/sign-up/';\n\nconst UUserMetaDetails = 'auth/user/meta/';\nconst UUserExits = 'auth/user/exists/';\n\nexport const pingAPI = (): Promise<IPing> => loadOpenUrl(UPing);\n\nexport const signUpStudentAPI = (data: ISignUpData) =>\n  loadOpenUrl(USignUpStudent, {\n    method: 'post',\n    data,\n  });\nexport const signINWithEmailAPI = (email: string, password: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithEmail, {\n    method: 'post',\n    data: {email, password},\n  });\nexport const signInWithGoogleAPI = (id: string, token: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithGoogle, {\n    method: 'post',\n    data: {id, token},\n  });\nexport const getUserMetaDetailAPI = (): Promise<IUserMeta> => loadSecureUrl(UUserMetaDetails);\nexport const doesUserExistsAPI = (email: string): Promise<IUserExists> =>\n  loadOpenUrl(UUserExits, {\n    params: {\n      email,\n    },\n  });\n","export const GOOGLE_OAUTH_CLIENT_ID = process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID;\nexport const GOOGLE_RECAPTCHA_KEY = process.env.REACT_APP_GOOGLE_RECAPTCHA_CLIENT_KEY;\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n","import React, {FC} from 'react';\nimport {Spin} from 'antd';\n\ninterface IProps {}\n\nconst LoadingScreen: FC<IProps> = () => (\n  <div className='loading-screen'>\n    <Spin size='large' tip='Loading...' />\n  </div>\n);\n\nexport default LoadingScreen;\n","export const deviceType = (width: number): string => {\n  if (width < 576) return 'xs';\n  if (width < 768) return 'sm';\n  if (width < 992) return 'md';\n  if (width < 1200) return 'xl';\n\n  return 'xxl';\n};\n\nexport const selectScreen = (\n  xs: any = undefined,\n  sm: any = undefined,\n  md: any = undefined,\n  lg: any = undefined,\n  xl: any = undefined,\n  xxl: any = undefined,\n): any => {\n  const device = deviceType(window.innerWidth);\n\n  // eslint-disable-next-line no-param-reassign\n  if (sm === undefined) sm = xs;\n  // eslint-disable-next-line no-param-reassign\n  if (md === undefined) md = sm;\n  // eslint-disable-next-line no-param-reassign\n  if (lg === undefined) lg = md;\n  // eslint-disable-next-line no-param-reassign\n  if (xl === undefined) xl = lg;\n  // eslint-disable-next-line no-param-reassign\n  if (xxl === undefined) xxl = xl;\n\n  switch (device) {\n    case 'xs':\n      return xs;\n    case 'sm':\n      return sm;\n    case 'md':\n      return md;\n    case 'lg':\n      return lg;\n    case 'xl':\n      return xl;\n    case 'xxl':\n      return xxl;\n    default:\n      // logically there should be an error but will generate error if index is not mounted\n      return 0;\n  }\n};\n"],"sourceRoot":""}