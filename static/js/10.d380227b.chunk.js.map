{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","constants/formFields.constant.ts","helpers/function.helper.ts","components/formCreator.jsx","helpers/api/file.api.helper.ts","../node_modules/antd/es/_util/getDataOrAriaProps.js","constants/contact.constant.ts","forms/contact.templateForm.tsx","components/contactUs.tsx","screens/contact.screen.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","FORM_ELEMENT_TYPES","INPUT","INPUT_NUMBER","PASSWORD","TEXTAREA","MARKDOWN","SELECT","CAPTCHA","MONTH_PICKER","FILE_DRAG_DROP","RANGE_PICKER","RADIO","type","name","label","rules","required","process","message","get","obj","key","defaultValue","e","MonthPicker","RangePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","blockFormItemLayout","FormCreator","props","handleSubmit","preventDefault","form","onSubmit","validateFields","openNotificationWithIcon","state","initialValues","loaded","initialValue","this","then","data","setState","catch","error","getFieldDecorator","setFieldsValue","getFieldValue","onCancel","extraData","submitButtonText","cancelButtonText","buttonType","formLayout","formTemplate","buttonPlacement","map","formItem","index","help","kwargs","desc","fieldOptions","itemInput","extraComponent","changeValue","captcha","sitekey","GOOGLE_RECAPTCHA_KEY","onChange","onExpired","onErrored","document","getElementById","innerText","options","Object","keys","forEach","Option","toString","children","options1","Group","Password","format","TextArea","Dragger","action","BASE_URL","file","upload_id","uid","onRemove","identifier","response","uploadId","loadOpenUrl","method","files","fileList","className","Item","title","colon","style","marginBottom","extra","preserve","width","onClick","htmlType","Component","WrappedFormCreator","create","connect","dispatch","getDataOrAriaProps","reduce","prev","substr","CONTACT","address","phoneNumbers","mails","conatctTemplateForm","extraValues","pattern","addonBefore","placeholder","autosize","minRows","ContactUs","useState","submitted","setSubmitted","icon","theme","objFrom","a","contactFormAPI","getFieldsValue","detail","Title","ContactScreen","id","md","level","fontWeight","line","phone","href","mail","height","marginLeft","marginRight","src","frameBorder","scrolling","marginHeight","marginWidth"],"mappings":"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","file":"static/js/10.d380227b.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const FORM_ELEMENT_TYPES = {\n  INPUT: 'input',\n  INPUT_NUMBER: 'input-number',\n  PASSWORD: 'password',\n  TEXTAREA: 'textarea',\n  MARKDOWN: 'markdown',\n  SELECT: 'select',\n  CAPTCHA: 'captcha',\n  MONTH_PICKER: 'month-picker',\n  FILE_DRAG_DROP: 'file-drag-drop',\n  RANGE_PICKER: 'range-picker',\n  RADIO: 'radio',\n};\n\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nexport const CAPTCHA = {\n  type: FORM_ELEMENT_TYPES.CAPTCHA,\n  name: 'captcha',\n  label: 'Captcha',\n  rules: [\n    {\n      required: process.env.NODE_ENV === 'production',\n      message: 'Please solve the captcha',\n    },\n  ],\n};\n","export const get = (obj: any, key: any, defaultValue: any = null) => {\n  try {\n    return obj[key];\n  } catch (e) {\n    return defaultValue;\n  }\n};\n\nexport const generalFilter = (input: string, option: any) =>\n  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n","/* eslint-disable */\nimport React, {Component} from 'react';\n\nimport {\n  Button,\n  Form,\n  Input,\n  Select,\n  Tooltip,\n  Icon,\n  DatePicker,\n  Upload,\n  Radio,\n  InputNumber,\n  Row,\n  Col\n} from 'antd';\nimport {connect} from 'react-redux';\n\nimport SimpleMDE from 'react-simplemde-editor';\nimport {FORM_ELEMENT_TYPES} from '../constants/formFields.constant';\n\nimport 'easymde/dist/easymde.min.css';\nimport {openNotificationWithIcon} from '../helpers/notification.helper';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport {GOOGLE_RECAPTCHA_KEY} from '../constants/credentials.constant';\nimport {getFileHandlerURL, removeFileFromServer} from '../helpers/api/file.api.helper';\n\nconst {MonthPicker, RangePicker} = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 16},\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst blockFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 24,\n      offset: 0\n    }\n  }\n};\n\nclass FormCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {},\n      loaded: false,\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {form, onSubmit} = this.props;\n    const {validateFields} = form;\n\n    validateFields(err => {\n      if (!err) onSubmit(form);\n      else openNotificationWithIcon('error', 'Please Correct the error displayed in forms.');\n    });\n  };\n\n\n  componentDidMount() {\n    const {initialValue} = this.props;\n    if (initialValue)\n      initialValue()\n        .then(data => {\n          this.setState({\n            initialValues: data,\n            loaded: true,\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  render() {\n    const {getFieldDecorator, setFieldsValue, getFieldValue} = this.props.form;\n    const {\n      onCancel,\n      state,\n      extraData,\n      initialValue,\n      submitButtonText,\n      cancelButtonText,\n      buttonType,\n      formLayout = formItemLayout,\n    } = this.props;\n    let {formTemplate} = this.props;\n    const {loaded} = this.state;\n\n    if (!loaded && initialValue) return 'Loading...';\n\n    if (typeof formTemplate === 'function') {\n      formTemplate = formTemplate(state, this.state.initialValues, extraData, this.props.form);\n    }\n\n    const buttonPlacement = buttonType === 'block'? blockFormItemLayout : tailFormItemLayout;\n\n\n    return (\n      <Form onSubmit={this.handleSubmit} {...formLayout}>\n        {formTemplate.map((formItem, index) => {\n          const {label, name, help, kwargs, type, desc, ...fieldOptions} = formItem;\n          const element = type;\n\n          let itemInput = null;\n          let extraComponent = null;\n\n          switch (element) {\n            case FORM_ELEMENT_TYPES.CAPTCHA:\n              const changeValue = (value = '') =>\n                setFieldsValue({\n                  captcha: value,\n                });\n              extraComponent = (\n                <ReCAPTCHA\n                  sitekey={GOOGLE_RECAPTCHA_KEY}\n                  onChange={changeValue}\n                  onExpired={() => changeValue()}\n                  onErrored={() => changeValue()}\n                />\n              );\n              itemInput = <input type=\"hidden\" value={getFieldValue('captcha')} />;\n              break;\n            case FORM_ELEMENT_TYPES.INPUT:\n              itemInput = <Input {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.INPUT_NUMBER:\n              itemInput = <InputNumber {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.MARKDOWN:\n              itemInput = (\n                <SimpleMDE\n                  onChange={value => {\n                    document.getElementById(name).innerText = value;\n                  }}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.SELECT:\n              const options = [];\n              Object.keys(formItem.options).forEach((key, index) => {\n                options.push(\n                  <Select.Option\n                    key={index.toString()}\n                    value={key}\n                    children={formItem.options[key]}\n                  />,\n                );\n              });\n              itemInput = <Select {...kwargs}>{options}</Select>;\n              break;\n            case FORM_ELEMENT_TYPES.RADIO:\n              const options1 = [];\n              Object.keys(formItem.options).forEach((key, index) => {\n                options1.push(\n                  <Radio key={index.toString()} value={key} children={formItem.options[key]}>\n                    {key}\n                  </Radio>,\n                );\n              });\n              itemInput = <Radio.Group>{options1}</Radio.Group>;\n              break;\n            case FORM_ELEMENT_TYPES.PASSWORD:\n              itemInput = <Input.Password {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.MONTH_PICKER:\n              itemInput = (\n                <MonthPicker\n                  {...kwargs}\n                  format=\"MM/YYYY\"\n                  // defaultValue={moment(kwargs['value'], kwargs['format'])}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.RANGE_PICKER:\n              itemInput = (\n                <RangePicker\n                  {...kwargs}\n                  format=\"YYYY-MM-DD\"\n                  // defaultValue={moment(kwargs['value'], kwargs['format'])}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.TEXTAREA:\n              itemInput = <Input.TextArea {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\n              extraComponent = (\n                <Upload.Dragger\n                  {...kwargs}\n                  action={getFileHandlerURL()}\n                  data={file => ({\n                    upload_id: file.uid,\n                  })}\n                  onRemove={file => removeFileFromServer(file.response.identifier, file.uid)}\n                  onChange={obj => {\n                    const files = [];\n                    obj.fileList.map(file => {\n                      // files[file.uid] = file.response ? file.response.id : '';\n                      files.push({\n                        upload_id: file.uid,\n                        identifier: file.response ? file.response.identifier : '',\n                      });\n                      return '';\n                    });\n                    setFieldsValue({\n                      [name]: files,\n                    });\n                  }}>\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" />\n                  </p>\n                  <p className=\"ant-upload-text\">{kwargs.help}</p>\n                  <p className=\"ant-upload-hint\">{kwargs.desc}</p>\n                </Upload.Dragger>\n              );\n              fieldOptions.initialValue = '';\n              itemInput = <input type=\"hidden\" value={getFieldValue(name)} />;\n              break;\n            default:\n              itemInput = <Input {...kwargs} />;\n          }\n\n          return (\n            <Form.Item\n              label={\n                <span>\n                  {label}\n                  &nbsp;\n                  {help ? (\n                    <Tooltip title={help}>\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  ) : null}\n                </span>\n              }\n              colon={false}\n              key={index.toString()}\n              style={{\n                marginBottom: 20,\n              }}\n              extra={desc}>\n              {extraComponent}\n              {getFieldDecorator(formItem.name, {\n                preserve: true,\n                ...fieldOptions,\n              })(itemInput)}\n            </Form.Item>\n          );\n        })}\n        <Form.Item {...buttonPlacement}>\n        {onCancel ? (\n          <Button\n            style={{\n              width: buttonType === 'block' ? '100%' : null,\n            }}\n            onClick={() => onCancel(this.props.form)}\n            htmlType=\"button\">\n            {cancelButtonText || 'Cancel'}\n          </Button>\n        ) : null}\n        </Form.Item>\n\n        <Form.Item {...buttonPlacement}>\n        <Button\n            onClick={this.handleSubmit}\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{\n              width: buttonType === 'block' ? '100%' : null,\n            }}>\n            {submitButtonText || 'Submit'}\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst WrappedFormCreator = Form.create({})(FormCreator);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WrappedFormCreator);\n","import {loadOpenUrl} from './loader.api.helper';\nimport {BASE_URL} from '../../constants/credentials.constant';\n\nconst FILE = 'utils/file/';\n\nexport const removeFileFromServer = (identifier: number, uploadId: number) =>\n  loadOpenUrl(FILE, {\n    method: 'delete',\n    data: {\n      upload_id: uploadId,\n      identifier,\n    },\n  });\nexport const getFileHandlerURL = () => `${BASE_URL}/${FILE}`;\n","export default function getDataOrAriaProps(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if ((key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role') && key.substr(0, 7) !== 'data-__') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}","export const CONTACT = {\n  address: [\n    'Dr. Rihan Khan Suri,',\n    'Training & Placement Officer',\n    'University Placement Cell',\n    '3rd Floor, Faculty of Engineering & Technology Building',\n    'Jamia Millia Islamia, New Delhi - 110025',\n  ],\n  phoneNumbers: ['+2580 26989106', '+2581 2698171'],\n  mails: ['upc@jmi.ac.in', 'rsuri@jmi.ac.in'],\n};\n","import {CAPTCHA, FORM_ELEMENT_TYPES} from '../constants/formFields.constant';\nimport {get} from '../helpers/function.helper';\n\n\nexport const conatctTemplateForm =\n  // eslint-disable-next-line no-unused-vars\n  (state: any, initialValues: any, extraValues: any, form: any) => [\n    {\n      label: 'Name',\n      name: 'name',\n      initialValue: get(initialValues, 'name'),\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [{required: true}],\n    }, {\n      label: 'Email',\n      name: 'email',\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [{required: true, type: 'email'}],\n    }, {\n      label: 'Contact Number',\n      name: 'phone',\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [\n        {pattern: /^\\d{10}$/, message: 'Not a Valid Indian Phone Number'}\n      ],\n      kwargs: {\n        addonBefore: '+91',\n      },\n    }, {\n      label: 'You are',\n      name: 'type',\n      type: FORM_ELEMENT_TYPES.SELECT,\n      rules: [{required: true}],\n      options: {\n        'S': 'Student',\n        'C': 'Company repesentative',\n        'V': 'Visitor',\n      },\n    }, {\n      label: 'Question',\n      name: 'question',\n      type: FORM_ELEMENT_TYPES.TEXTAREA,\n      kwargs: {\n        placeholder: 'Ask your question in brief',\n        autosize: {\n          minRows: 3\n        }\n      },\n      rules: [{required: true}],\n    }, {\n      ...CAPTCHA\n    }\n  ];\n","import React, {FC, useState} from 'react';\nimport {Icon, Result} from 'antd';\n\nimport FormCreator from './formCreator';\nimport {conatctTemplateForm} from '../forms/contact.templateForm';\nimport {contactFormAPI} from '../helpers/api/api.helper';\nimport {openNotificationWithIcon} from '../helpers/notification.helper';\n\ninterface IProps {\n}\n\nconst ContactUs: FC<IProps> = () => {\n  const [submitted, setSubmitted] = useState(false);\n\n  if(submitted)\n    return (\n      <Result\n        icon={<Icon type='smile' theme='twoTone' />}\n        title='We recived your question, we will reply you on your provided email.'\n      />\n    );\n\n  return (\n    // @ts-ignore\n    <FormCreator\n      formTemplate={conatctTemplateForm}\n      submitButtonText='Submit your query'\n      onSubmit={async (objFrom: any) => {\n        try{\n          await contactFormAPI(objFrom.getFieldsValue());\n          setSubmitted(true)\n        } catch (ee) {\n          openNotificationWithIcon('error', ee.data.detail);\n        }\n      }}\n    />\n  );\n};\n\nexport default ContactUs;\n","import React, {FC} from 'react';\nimport {Typography, Icon, Row, Col} from 'antd';\n\nimport {CONTACT} from '../constants/contact.constant';\nimport ContactUs from '../components/contactUs';\n\ninterface IProps {}\n\nconst {Title} = Typography;\n\nconst ContactScreen: FC<IProps> = () => (\n  <div id='contact'>\n    <Row>\n      <Col xs={24} md={12} className='container'>\n        <Title>Contact Us</Title>\n        <Title level={4} style={{fontWeight: 'normal'}}>\n          {CONTACT.address.map(line => (\n            <div key={line}>\n              {line}\n              <br />\n            </div>\n          ))}\n        </Title>\n        Phone numbers\n        <ul className='space-child'>\n          {CONTACT.phoneNumbers.map((phone, index) => (\n            <li key={index.toString()}>\n              <a href={`tel:${phone}`} key={phone}>\n                <Icon type='phone' />\n                &nbsp;\n                {phone}\n              </a>\n            </li>\n          ))}\n        </ul>\n        Mailing addresses\n        <ul>\n          {CONTACT.mails.map((mail, index) => (\n            <li key={index.toString()}>\n              <a href={`mailto:${mail}`} key={mail}>\n                <Icon type='mail' />\n                &nbsp;\n                {mail}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </Col>\n\n      <Col xs={24} md={12} className='container'>\n        <Title level={3}>Need assistance from us?</Title>\n        <ContactUs />\n      </Col>\n    </Row>\n    <iframe\n      title='Way to University Placement Cell, Jamia Millia Islamia'\n      width='100%'\n      height='320px'\n      style={{marginLeft: 'auto', marginRight: 'auto'}}\n      id='gmap_canvas'\n      src={\n        'https://maps.google.com/maps?' +\n        'q=university%20placement%20cell&t=&z=13&ie=UTF8&iwloc=&output=embed'\n      }\n      frameBorder='0'\n      scrolling='no'\n      marginHeight={0}\n      marginWidth={0}\n    />\n  </div>\n);\n\nexport default ContactScreen;\n"],"sourceRoot":""}