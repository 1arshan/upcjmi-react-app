{"version":3,"sources":["constants/contact.constant.ts","forms/contactAssistance.form.tsx","screens/contact.screen.tsx"],"names":["CONTACT","address","phoneNumbers","mails","TextArea","wrapperCol","xs","span","offset","sm","create","name","getFieldDecorator","form","labelCol","Item","label","hasFeedback","rules","required","message","type","min","max","addonBefore","style","width","placeholder","autosize","minRows","Title","ContactScreen","id","md","className","level","fontWeight","map","line","key","phone","index","toString","href","mail","title","height","marginLeft","marginRight","src","frameBorder","scrolling","marginHeight","marginWidth"],"mappings":"mMAAaA,EAAU,CACrBC,QAAS,CACP,uBACA,+BACA,4BACA,0DACA,4CAEFC,aAAc,CAAC,iBAAkB,iBACjCC,MAAO,CAAC,gBAAiB,oB,oDCCpBC,E,IAAAA,SACDC,EAAa,CACjBC,GAAI,CAACC,KAAM,GAAIC,OAAQ,GACvBC,GAAI,CAACF,KAAM,GAAIC,OAAQ,IAyEV,MAAKE,OAAO,CAACC,KAAM,WAAnB,EAtE2B,SAAC,GAAoB,IACtDC,EADqD,EAAlBC,KACnCD,kBAYP,OACE,oCAEE,sBAdmB,CACrBE,SAAU,CACRR,GAAI,CAACC,KAAM,IACXE,GAAI,CAACF,KAAM,IAEbF,WAAY,CACVC,GAAI,CAACC,KAAM,IACXE,GAAI,CAACF,KAAM,MAQT,sBAAMQ,KAAN,CAAWC,MAAM,OAAOC,aAAW,GAChCL,EAAkB,OAAQ,CACzBM,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6DAJdR,CAOE,8BAGL,sBAAMG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GACjCL,EAAkB,QAAS,CAC1BM,MAAO,CACL,CACEC,UAAU,EACVC,QACE,yFAGJ,CACEC,KAAM,QACND,QAAS,uCAVdR,CAaE,uBAAOS,KAAK,YAGjB,sBAAMN,KAAN,CAAWC,MAAM,iBACdJ,EAAkB,QAAS,CAC1BM,MAAO,CAAC,CAACI,IAAK,GAAIC,IAAK,GAAIH,QAAS,wCADrCR,CAEE,uBAAOS,KAAK,SAASG,YAAa,CAAC,OAAQC,MAAO,CAACC,MAAO,YAG/D,sBAAMX,KAAN,CAAWV,WAAYA,GACpBO,EAAkB,WAAY,CAC7BM,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oEAJdR,CAOE,kBAACR,EAAD,CAAUuB,YAAY,+BAA+BC,SAAU,CAACC,QAAS,OAG9E,sBAAMd,KAAN,CAAWV,WAAYA,GACrB,uBAAQgB,KAAK,WAAb,2BCvEHS,E,IAAAA,MAgEQC,UA9DmB,kBAChC,yBAAKC,GAAG,WACN,2BACE,uBAAK1B,GAAI,GAAI2B,GAAI,GAAIC,UAAU,aAC7B,kBAACJ,EAAD,mBACA,kBAACA,EAAD,CAAOK,MAAO,EAAGV,MAAO,CAACW,WAAY,WAClCpC,EAAQC,QAAQoC,KAAI,SAAAC,GAAI,OACvB,yBAAKC,IAAKD,GACPA,EACD,kCANR,gBAWE,wBAAIJ,UAAU,eACXlC,EAAQE,aAAamC,KAAI,SAACG,EAAOC,GAAR,OACxB,wBAAIF,IAAKE,EAAMC,YACb,uBAAGC,KAAI,cAASH,GAASD,IAAKC,GAC5B,uBAAMnB,KAAK,UADb,OAGGmB,QAjBX,oBAuBE,4BACGxC,EAAQG,MAAMkC,KAAI,SAACO,EAAMH,GAAP,OACjB,wBAAIF,IAAKE,EAAMC,YACb,uBAAGC,KAAI,iBAAYC,GAAQL,IAAKK,GAC9B,uBAAMvB,KAAK,SADb,OAGGuB,SAOX,uBAAKtC,GAAI,GAAI2B,GAAI,GAAIC,UAAU,aAC7B,kBAACJ,EAAD,CAAOK,MAAO,GAAd,4BACA,kBAAC,EAAD,QAGJ,4BACEU,MAAM,yDACNnB,MAAM,OACNoB,OAAO,QACPrB,MAAO,CAACsB,WAAY,OAAQC,YAAa,QACzChB,GAAG,cACHiB,IACE,mGAGFC,YAAY,IACZC,UAAU,KACVC,aAAc,EACdC,YAAa","file":"static/js/16.c51ac70b.chunk.js","sourcesContent":["export const CONTACT = {\n  address: [\n    'Dr. Rihan Khan Suri,',\n    'Training & Placement Officer',\n    'University Placement Cell',\n    '3rd Floor, Faculty of Engineering & Technology Building',\n    'Jamia Millia Islamia, New Delhi - 110025',\n  ],\n  phoneNumbers: ['+2580 26989106', '+2581 2698171'],\n  mails: ['upc@jmi.ac.in', 'rsuri@jmi.ac.in'],\n};\n","import React, {FC} from 'react';\n\nimport {Input, Form, Button} from 'antd';\n\ninterface IProps {\n  form: {\n    getFieldDecorator: any;\n  };\n}\n\nconst {TextArea} = Input;\nconst wrapperCol = {\n  xs: {span: 24, offset: 0},\n  sm: {span: 16, offset: 8},\n};\n\nconst ContactAssistanceForm: FC<IProps> = ({form}: IProps) => {\n  const {getFieldDecorator} = form;\n  const formItemLayout = {\n    labelCol: {\n      xs: {span: 24},\n      sm: {span: 8},\n    },\n    wrapperCol: {\n      xs: {span: 24},\n      sm: {span: 16},\n    },\n  };\n\n  return (\n    <>\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Form {...formItemLayout}>\n        <Form.Item label='Name' hasFeedback>\n          {getFieldDecorator('name', {\n            rules: [\n              {\n                required: true,\n                message: 'We need you name to assist you. Please enter your name.',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n\n        <Form.Item label='Email' hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                required: true,\n                message:\n                  'We prefer email communication, providing email is mandatory. ' +\n                  'Please enter your email.',\n              },\n              {\n                type: 'email',\n                message: 'Please enter valid email address.',\n              },\n            ],\n          })(<Input type='email' />)}\n        </Form.Item>\n\n        <Form.Item label='Mobile Number'>\n          {getFieldDecorator('phone', {\n            rules: [{min: 10, max: 10, message: 'Please enter a valid Indian number'}],\n          })(<Input type='number' addonBefore={['+91']} style={{width: '100%'}} />)}\n        </Form.Item>\n\n        <Form.Item wrapperCol={wrapperCol}>\n          {getFieldDecorator('question', {\n            rules: [\n              {\n                required: true,\n                message: 'We need your question to help you. Please enter your question.',\n              },\n            ],\n          })(<TextArea placeholder='Ask your question in detail.' autosize={{minRows: 3}} />)}\n        </Form.Item>\n\n        <Form.Item wrapperCol={wrapperCol}>\n          <Button type='primary'>Submit your query</Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default Form.create({name: 'contact'})(ContactAssistanceForm);\n","import React, {FC} from 'react';\nimport {Typography, Icon, Row, Col} from 'antd';\n\nimport {CONTACT} from '../constants/contact.constant';\nimport ContactAssistanceForm from '../forms/contactAssistance.form';\n\ninterface IProps {}\n\nconst {Title} = Typography;\n\nconst ContactScreen: FC<IProps> = () => (\n  <div id='contact'>\n    <Row>\n      <Col xs={24} md={12} className='container'>\n        <Title>Contact Us</Title>\n        <Title level={4} style={{fontWeight: 'normal'}}>\n          {CONTACT.address.map(line => (\n            <div key={line}>\n              {line}\n              <br />\n            </div>\n          ))}\n        </Title>\n        Phone numbers\n        <ul className='space-child'>\n          {CONTACT.phoneNumbers.map((phone, index) => (\n            <li key={index.toString()}>\n              <a href={`tel:${phone}`} key={phone}>\n                <Icon type='phone' />\n                &nbsp;\n                {phone}\n              </a>\n            </li>\n          ))}\n        </ul>\n        Mailing addresses\n        <ul>\n          {CONTACT.mails.map((mail, index) => (\n            <li key={index.toString()}>\n              <a href={`mailto:${mail}`} key={mail}>\n                <Icon type='mail' />\n                &nbsp;\n                {mail}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </Col>\n\n      <Col xs={24} md={12} className='container'>\n        <Title level={3}>Need assistance from us?</Title>\n        <ContactAssistanceForm />\n      </Col>\n    </Row>\n    <iframe\n      title='Way to University Placement Cell, Jamia Millia Islamia'\n      width='100%'\n      height='320px'\n      style={{marginLeft: 'auto', marginRight: 'auto'}}\n      id='gmap_canvas'\n      src={\n        'https://maps.google.com/maps?' +\n        'q=university%20placement%20cell&t=&z=13&ie=UTF8&iwloc=&output=embed'\n      }\n      frameBorder='0'\n      scrolling='no'\n      marginHeight={0}\n      marginWidth={0}\n    />\n  </div>\n);\n\nexport default ContactScreen;\n"],"sourceRoot":""}