{"version":3,"sources":["helpers/function.helper.ts","constants/formFields.constant.ts","components/formCreator.jsx","helpers/api/file.api.helper.ts","forms/signUp/basic.templateForm.tsx","components/signUp/basic.signUp.tsx"],"names":["get","obj","key","defaultValue","e","FORM_ELEMENT_TYPES","INPUT","INPUT_NUMBER","PASSWORD","TEXTAREA","MARKDOWN","SELECT","CAPTCHA","MONTH_PICKER","FILE_DRAG_DROP","RANGE_PICKER","RADIO","type","name","label","rules","required","message","MonthPicker","RangePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","FormCreator","props","handleSubmit","preventDefault","form","onSubmit","validateFields","err","openNotificationWithIcon","state","initialValues","loaded","initialValue","this","then","data","setState","catch","error","getFieldDecorator","setFieldsValue","getFieldValue","onCancel","extraData","submitButtonText","cancelButtonText","buttonType","formLayout","formTemplate","map","formItem","index","help","kwargs","desc","fieldOptions","itemInput","extraComponent","changeValue","value","captcha","sitekey","GOOGLE_RECAPTCHA_KEY","onChange","onExpired","onErrored","document","getElementById","innerText","options","Object","keys","forEach","push","Option","toString","children","options1","Group","Password","format","Dragger","action","BASE_URL","file","id","uid","onRemove","response","uploadId","loadOpenUrl","method","files","fileList","className","Item","title","colon","style","marginBottom","extra","preserve","display","onClick","htmlType","width","Component","WrappedFormCreator","create","connect","dispatch","basicTemplateForm","extraValues","placeholder","pattern","max","min","addonBefore","Title","BasicSignUp","next","a","basic","objForm","getFieldsValue","level"],"mappings":"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","file":"static/js/9.56fc057d.chunk.js","sourcesContent":["export const get = (obj: any, key: any, defaultValue: any = null) => {\n  try {\n    return obj[key];\n  } catch (e) {\n    return defaultValue;\n  }\n};\n\nexport const generalFilter = (input: string, option: any) =>\n  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n","export const FORM_ELEMENT_TYPES = {\n  INPUT: 'input',\n  INPUT_NUMBER: 'input-number',\n  PASSWORD: 'password',\n  TEXTAREA: 'textarea',\n  MARKDOWN: 'markdown',\n  SELECT: 'select',\n  CAPTCHA: 'captcha',\n  MONTH_PICKER: 'month-picker',\n  FILE_DRAG_DROP: 'file-drag-drop',\n  RANGE_PICKER: 'range-picker',\n  RADIO: 'radio',\n};\n\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nexport const CAPTCHA = {\n  type: FORM_ELEMENT_TYPES.CAPTCHA,\n  name: 'captcha',\n  label: 'Captcha',\n  rules: [\n    {\n      required: true,\n      message: 'Please solve the captcha',\n    },\n  ],\n};\n","/* eslint-disable */\nimport React, {Component} from 'react';\n\nimport {\n  Button,\n  Form,\n  Input,\n  Select,\n  Tooltip,\n  Icon,\n  DatePicker,\n  Upload,\n  Radio,\n  InputNumber,\n} from 'antd';\nimport {connect} from 'react-redux';\n\nimport SimpleMDE from 'react-simplemde-editor';\nimport {FORM_ELEMENT_TYPES} from '../constants/formFields.constant';\n\nimport 'easymde/dist/easymde.min.css';\nimport {openNotificationWithIcon} from '../helpers/notification.helper';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport {GOOGLE_RECAPTCHA_KEY} from '../constants/credentials.constant';\nimport {getFileHandlerURL, removeFileFromServer} from '../helpers/api/file.api.helper';\n\nconst {MonthPicker, RangePicker} = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 16},\n  },\n};\n\nclass FormCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {},\n      loaded: false,\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {form, onSubmit} = this.props;\n    const {validateFields} = form;\n\n    validateFields(err => {\n      if (!err) onSubmit(form);\n      else openNotificationWithIcon('error', 'Please Correct the error displayed in forms.');\n    });\n  };\n\n  componentDidMount() {\n    const {initialValue} = this.props;\n    if (initialValue)\n      initialValue()\n        .then(data => {\n          this.setState({\n            initialValues: data,\n            loaded: true,\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  render() {\n    const {getFieldDecorator, setFieldsValue, getFieldValue} = this.props.form;\n    const {\n      onCancel,\n      state,\n      extraData,\n      initialValue,\n      submitButtonText,\n      cancelButtonText,\n      buttonType,\n      formLayout = formItemLayout,\n    } = this.props;\n    let {formTemplate} = this.props;\n    const {loaded} = this.state;\n\n    if (!loaded && initialValue) return 'Loading...';\n\n    if (typeof formTemplate === 'function') {\n      formTemplate = formTemplate(state, this.state.initialValues, extraData, this.props.form);\n    }\n\n    return (\n      <Form onSubmit={this.handleSubmit} {...formLayout}>\n        {formTemplate.map((formItem, index) => {\n          const {label, name, help, kwargs, type, desc, ...fieldOptions} = formItem;\n          const element = type;\n\n          let itemInput = null;\n          let extraComponent = null;\n\n          switch (element) {\n            case FORM_ELEMENT_TYPES.CAPTCHA:\n              const changeValue = (value = '') =>\n                setFieldsValue({\n                  captcha: value,\n                });\n              extraComponent = (\n                <ReCAPTCHA\n                  sitekey={GOOGLE_RECAPTCHA_KEY}\n                  onChange={changeValue}\n                  onExpired={() => changeValue()}\n                  onErrored={() => changeValue()}\n                />\n              );\n              itemInput = <input type=\"hidden\" />;\n              break;\n            case FORM_ELEMENT_TYPES.INPUT:\n              itemInput = <Input {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.INPUT_NUMBER:\n              itemInput = <InputNumber {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.MARKDOWN:\n              itemInput = (\n                <SimpleMDE\n                  onChange={value => {\n                    document.getElementById(name).innerText = value;\n                  }}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.SELECT:\n              const options = [];\n              Object.keys(formItem.options).forEach((key, index) => {\n                options.push(\n                  <Select.Option\n                    key={index.toString()}\n                    value={key}\n                    children={formItem.options[key]}\n                  />,\n                );\n              });\n              itemInput = <Select {...kwargs}>{options}</Select>;\n              break;\n            case FORM_ELEMENT_TYPES.RADIO:\n              const options1 = [];\n              Object.keys(formItem.options).forEach((key, index) => {\n                options1.push(\n                  <Radio key={index.toString()} value={key} children={formItem.options[key]}>\n                    {key}\n                  </Radio>,\n                );\n              });\n              itemInput = <Radio.Group>{options1}</Radio.Group>;\n              break;\n            case FORM_ELEMENT_TYPES.PASSWORD:\n              itemInput = <Input.Password {...kwargs} />;\n              break;\n            case FORM_ELEMENT_TYPES.MONTH_PICKER:\n              itemInput = (\n                <MonthPicker\n                  {...kwargs}\n                  format=\"MM/YYYY\"\n                  // defaultValue={moment(kwargs['value'], kwargs['format'])}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.RANGE_PICKER:\n              itemInput = (\n                <RangePicker\n                  {...kwargs}\n                  format=\"YYYY-MM-DD\"\n                  // defaultValue={moment(kwargs['value'], kwargs['format'])}\n                />\n              );\n              break;\n            case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\n              extraComponent = (\n                <Upload.Dragger\n                  {...kwargs}\n                  action={getFileHandlerURL()}\n                  data={file => ({\n                    id: file.uid,\n                  })}\n                  onRemove={file => removeFileFromServer(file.response.id, file.uid)}\n                  onChange={obj => {\n                    const files = [];\n                    obj.fileList.map(file => {\n                      // files[file.uid] = file.response ? file.response.id : '';\n                      files.push({\n                        uid: file.uid,\n                        id: file.response ? file.response.id : '',\n                      });\n                      return '';\n                    });\n                    setFieldsValue({\n                      [name]: files,\n                    });\n                  }}>\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" />\n                  </p>\n                  <p className=\"ant-upload-text\">{kwargs.help}</p>\n                  <p className=\"ant-upload-hint\">{kwargs.desc}</p>\n                </Upload.Dragger>\n              );\n              fieldOptions.initialValue = '';\n              itemInput = <input type=\"hidden\" value={getFieldValue(name)} />;\n              break;\n            default:\n              itemInput = <Input {...kwargs} />;\n          }\n\n          return (\n            <Form.Item\n              label={\n                <span>\n                  {label}\n                  &nbsp;\n                  {help ? (\n                    <Tooltip title={help}>\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  ) : null}\n                </span>\n              }\n              colon={false}\n              key={index.toString()}\n              style={{\n                marginBottom: 20,\n              }}\n              extra={desc}>\n              {extraComponent}\n              {getFieldDecorator(formItem.name, {\n                preserve: true,\n                ...fieldOptions,\n              })(itemInput)}\n            </Form.Item>\n          );\n        })}\n        {onCancel ? (\n          <Button\n            style={{\n              display: buttonType,\n            }}\n            onClick={() => onCancel(this.props.form)}\n            htmlType=\"button\">\n            {cancelButtonText || 'Cancel'}\n          </Button>\n        ) : null}\n        <Button\n          onClick={this.handleSubmit}\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{\n            width: buttonType === 'block' ? '100%' : null,\n          }}>\n          {submitButtonText || 'Submit'}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst WrappedFormCreator = Form.create({})(FormCreator);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WrappedFormCreator);\n","import {loadOpenUrl} from './loader.api.helper';\nimport {BASE_URL} from '../../constants/credentials.constant';\n\nconst FILE = 'utils/file/';\n\nexport const removeFileFromServer = (id: number, uploadId: number) =>\n  loadOpenUrl(FILE, {\n    method: 'delete',\n    data: {\n      uid: uploadId,\n      id,\n    },\n  });\nexport const getFileHandlerURL = () => `${BASE_URL}/${FILE}`;\n","import {FORM_ELEMENT_TYPES} from '../../constants/formFields.constant';\nimport {get} from '../../helpers/function.helper';\n\nexport const basicTemplateForm =\n  // eslint-disable-next-line no-unused-vars\n  (state: any, initialValues: any, extraValues: any, form: any) => [\n    {\n      label: 'Name',\n      name: 'name',\n      initialValue: get(initialValues, 'name'),\n      kwargs: {\n        placeholder: 'ex: Faisal Manzer',\n      },\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [{required: true}],\n    },\n    {\n      label: 'Roll number',\n      name: 'roll',\n      initialValue: get(initialValues, 'roll'),\n      kwargs: {\n        placeholder: 'ex: 17BCE064',\n      },\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [\n        {required: true},\n        {\n          pattern: /(20)?\\d{2}\\w+\\d{3}/,\n          message: 'Roll number is not in valid pattern. ',\n        },\n      ],\n    },\n    {\n      label: 'Student ID',\n      name: 'student_id',\n      initialValue: get(initialValues, 'student'),\n      kwargs: {\n        placeholder: 'ex: 20177089',\n      },\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [\n        {required: true},\n        {\n          max: 9,\n          min: 8,\n          message: 'Normally student id is of 8 or 9 digit',\n        },\n      ],\n    },\n    {\n      label: 'Course',\n      name: 'course',\n      initialValue: get(initialValues, 'course'),\n      kwargs: {\n        placeholder: 'ex: B.Tech. Civil',\n      },\n      type: FORM_ELEMENT_TYPES.INPUT,\n      rules: [{required: true}],\n    },\n    {\n      label: 'Year',\n      name: 'year',\n      initialValue: get(initialValues, 'year') || '2',\n      type: FORM_ELEMENT_TYPES.SELECT,\n      kwargs: {\n        placeholder: 'ex: 2nd year',\n      },\n      rules: [{required: true}],\n      options: {\n        '1': '1st year',\n        '2': '2nd year',\n        '3': '3rd year',\n        '4': '4th year',\n        '5': '5th year',\n      },\n    },\n    {\n      label: 'Number',\n      name: 'phone_number',\n      initialValue: get(initialValues, 'phone_number'),\n      rules: [\n        {\n          min: 10,\n          max: 10,\n          message: 'Not a Valid Indian Phone Number',\n        },\n        {required: true},\n      ],\n      kwargs: {\n        addonBefore: '+91',\n      },\n    },\n  ];\n","import React, {FC} from 'react';\nimport {Typography} from 'antd';\n\nimport FormCreator from '../formCreator';\nimport {ISignUpData} from '../../types/signUp.type';\nimport {basicTemplateForm} from '../../forms/signUp/basic.templateForm';\n\ninterface IProps {\n  action: any;\n  next: any;\n  data: ISignUpData;\n}\n\nconst {Title} = Typography;\n\nconst BasicSignUp: FC<IProps> = ({action, data, next}: IProps) => {\n  const form = (\n    // @ts-ignore\n    <FormCreator\n      formTemplate={basicTemplateForm}\n      initialValue={async () => data.basic}\n      buttonType='block'\n      onSubmit={(objForm: any) => {\n        action({\n          ...data,\n          basic: {\n            ...data.basic,\n            ...objForm.getFieldsValue(),\n          },\n        });\n        next();\n      }}\n    />\n  );\n\n  return (\n    <div>\n      <Title level={3}>Basic details</Title>\n      If you feel that your entry is correct and form is still showing error, please do report\n      issue.\n      {form}\n    </div>\n  );\n};\n\nexport default BasicSignUp;\n"],"sourceRoot":""}